generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Organization {
  id   String    @id @default(cuid())
  name String

  membership Membership[]
  
  @@map(name: "organization")
}

model Membership {
  id   String            @id @default(cuid())
  role MembershipRole

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  user   User? @relation(fields: [userId], references: [id])
  userId String?

  // When the user joins, we will clear out the name and email and set the user.
  invitedName  String?
  invitedEmail String?

  @@unique([organizationId, invitedEmail])
  
  @@map(name: "memberships")
}

enum MembershipRole {
  OWNER
  ADMIN
  USER
}

// The owners of the SaaS (you) can have a SUPERADMIN role to access all data
enum GlobalRole {
  SUPERADMIN
  CUSTOMER
}

model User {
  id        String        @id @default(cuid())
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  name      String?
  email     String     @unique
  role      GlobalRole @default(CUSTOMER)

  memberships Membership[]

  @@map(name: "users")
}
